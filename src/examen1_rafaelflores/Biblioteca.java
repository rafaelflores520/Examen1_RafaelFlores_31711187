/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examen1_rafaelflores;

import java.awt.HeadlessException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Faith
 */
public class Biblioteca extends javax.swing.JFrame {
    public ArrayList<Libro> libros = new ArrayList();
    public DefaultTableModel modelo;
    public String genre[] = {"Fantasia", "Romance", "Accion", "Historia"}; 
    public String actuaUser;
    public SimpleDateFormat form = new SimpleDateFormat("dd-MM-yyyy");
    /**
     * Creates new form Biblioteca
     */
    public Biblioteca() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        dcFecha = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        cmbPuntaje = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        spnEdicion = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        spnCopias = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        txtAutor = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbGenero = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtLibro = new javax.swing.JTable();
        btnMod = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtHistorial = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Fecha");

        jLabel5.setText("Puntaje");

        cmbPuntaje.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        jLabel6.setText("Edicion");

        spnEdicion.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        jLabel7.setText("Copias");

        spnCopias.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel8.setText("Precio");

        btnGuardar.setText("Crear Libro");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });

        jLabel1.setText("Titulo");

        jLabel2.setText("Autor");

        jLabel3.setText("Descripcion");

        jLabel9.setText("jLabel9");

        cmbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fantasia ", "Romance", "Accion", "Historia" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbPuntaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTitulo)
                            .addComponent(txtAutor)
                            .addComponent(txtDescripcion)
                            .addComponent(dcFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(txtPrecio)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spnCopias, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(spnEdicion, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(116, 116, 116)
                        .addComponent(btnGuardar))
                    .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(243, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(dcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cmbPuntaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(spnEdicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(spnCopias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Agregar Libro", jPanel1);

        jtLibro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Autor", "Descripcion", "Fecha", "Puntaje", "Edicion", "Copias", "Genero", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtLibro);

        btnMod.setText("Modificar");
        btnMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModMouseClicked(evt);
            }
        });

        btnDel.setText("Eliminar");
        btnDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDelMouseClicked(evt);
            }
        });

        jLabel10.setText("Para Modificar seleccione la CELDA de su eleccion y presione Modificar");

        jLabel11.setText("Para Eliminar seleccione la fila de su elecion y presione eliminar ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnMod)
                        .addGap(29, 29, 29)
                        .addComponent(btnDel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMod)
                    .addComponent(btnDel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Modificar y Eliminar Libro", jPanel2);

        jtHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Accion", "Usuario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtHistorial);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Historial", jPanel3);

        btnSalir.setText("Salir");
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalir))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSalir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked
        Loggin log = new Loggin();
        log.libro = libros;
        log.setCargar();
        log.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnSalirMouseClicked

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        modelo = (DefaultTableModel) this.jtLibro.getModel();
        if (this.txtTitulo.getText().equals("") || this.txtDescripcion.getText().equals("") || this.txtAutor.getText().equals("") || this.txtPrecio.getText().equals("")) {
           JOptionPane.showMessageDialog(this, "Debe llenar todos los campos!!!!!!"); 
        }else{
            double precio;
            String fecha = form.format(this.dcFecha.getDate());
            try {
                precio = Double.parseDouble(this.txtPrecio.getText());
                Libro lib = new Libro(this.txtTitulo.getText(), this.txtDescripcion.getText(), this.cmbGenero.getSelectedItem().toString(), 
                        this.txtAutor.getText(), fecha, Integer.parseInt(this.cmbPuntaje.getSelectedItem().toString()), Integer.parseInt(this.spnCopias.getValue().toString()), 
                        Integer.parseInt(this.spnEdicion.getValue().toString()), precio);
                libros.add(lib);
                Object row [] = {
                    lib.getTitulo(),
                    lib.getAutor(),
                    lib.getDescrip(),
                    lib.getFechaLanzamiento(),
                    lib.getPuntos(),
                    lib.getEdicion(),
                    lib.getCopias(),
                    lib.getGenero(),
                    lib.getPrecio()
                };
                modelo.addRow(row);
                this.jtLibro.setModel(modelo);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "En la seccion de Precio solo puede ingresar datos numericos!!!!"); 
            }
        }
        JOptionPane.showMessageDialog(this, "Su Libro fue Insertado con exito");
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void btnModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModMouseClicked
        modelo = (DefaultTableModel) this.jtLibro.getModel();
        if (this.jtLibro.getSelectedRow() >= 0) {
            int col = this.jtLibro.getSelectedColumn();
            switch (col) {
                case 0:
                    String titulo = JOptionPane.showInputDialog("Ingrese el nuevo titulo");
                    for (int i = 0; i < libros.size(); i++) {
                        if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getTitulo())) {
                            libros.get(i).setTitulo(titulo);
                        }
                    }
                    modelo.setValueAt(titulo, this.jtLibro.getSelectedRow(), col);
                    break;
                case 1:
                    String autor = JOptionPane.showInputDialog("Ingrese el nuevo Autor");
                    for (int i = 0; i < libros.size(); i++) {
                        if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getAutor())) {
                            libros.get(i).setAutor(autor);
                        }
                    }
                    modelo.setValueAt(autor, this.jtLibro.getSelectedRow(), col);
                    break;
                case 2:
                    String descrip = JOptionPane.showInputDialog("Ingrese la nueva Descripcion");
                    for (int i = 0; i < libros.size(); i++) {
                        if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getDescrip())) {
                            libros.get(i).setDescrip(descrip);
                        }
                    }
                    modelo.setValueAt(descrip, this.jtLibro.getSelectedRow(), col);
                    break;
                case 3:
                    String fecha = JOptionPane.showInputDialog("Ingrese la nueva fecha (dd-MM-yyyy)");
                    for (int i = 0; i < libros.size(); i++) {
                        if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getFechaLanzamiento())) {
                            libros.get(i).setFechaLanzamiento(fecha);
                        }
                    }
                    modelo.setValueAt(fecha, this.jtLibro.getSelectedRow(), col);
                    break;
                case 4:
                    try {
                        int puntos = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la nueva puntuacion"));
                        if (puntos > 0 && puntos < 6) {
                            for (int i = 0; i < libros.size(); i++) {
                                if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getPuntos())) {
                                    libros.get(i).setPuntos(puntos);
                                }
                            }
                            modelo.setValueAt(puntos, this.jtLibro.getSelectedRow(), col);
                        }else{
                            JOptionPane.showMessageDialog(this, "No puede ingresar una puntuacion menor a 1 o mayor a 5");
                        }
                    } catch (HeadlessException | NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "No puede ingresar otro caracter aparte de numeros!!!");
                    }
                    break;
                case 5:
                    try {
                        int edicion = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la nueva Edicion"));
                        if (edicion > 0) {
                            for (int i = 0; i < libros.size(); i++) {
                                if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getEdicion())) {
                                    libros.get(i).setEdicion(edicion);
                                }
                            }
                            modelo.setValueAt(edicion, this.jtLibro.getSelectedRow(), col);
                        }else{
                            JOptionPane.showMessageDialog(this, "No puede ingresar una Edicion menor a 1 ");
                        }
                    } catch (HeadlessException | NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "No puede ingresar otro caracter aparte de numeros!!!");
                    }
                    break;
                case 6:
                    try {
                        int copias = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la nueva Edicion"));
                        if (copias > 0) {
                            for (int i = 0; i < libros.size(); i++) {
                                if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getCopias())) {
                                    libros.get(i).setCopias(copias);
                                }
                            }
                            modelo.setValueAt(copias, this.jtLibro.getSelectedRow(), col);
                        }else{
                            JOptionPane.showMessageDialog(this, "No puede ingresar una puntuacion menor a 1 ");
                        }
                    } catch (HeadlessException | NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "No puede ingresar otro caracter aparte de numeros!!!");
                    }
                    break;
                case 7:
                    String genero = JOptionPane.showInputDialog("Ingrese el nuevo genero");
                    for (int i = 0; i < genre.length; i++) {
                        if (genero.equals(genre[i])) {
                            for (int j = 0; j < libros.size(); j++) {
                                if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(j).getGenero())) {
                                    libros.get(j).setGenero(genero);
                                }
                            }
                            modelo.setValueAt(genero, this.jtLibro.getSelectedRow(), col);
                            break;
                        }
                        if (i == genre.length-1) {
                            JOptionPane.showMessageDialog(this, "No puede Ingresar ese genero!!!");
                        }
                    }
                    break;
                case 8:
                    try {
                        double precio = Double.parseDouble(JOptionPane.showInputDialog("Ingrese el nuevo Precio"));
                        if (precio > 0) {
                            for (int i = 0; i < libros.size(); i++) {
                                if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getPrecio())) {
                                    libros.get(i).setPrecio(precio);
                                }
                            }
                            modelo.setValueAt(precio, this.jtLibro.getSelectedRow(), col);
                        }else{
                            JOptionPane.showMessageDialog(this, "No puede ingresar un precio menor a 1 ");
                        }
                    } catch (HeadlessException | NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "No puede ingresar otro caracter aparte de numeros!!!");
                    }
                    break;
            }
            this.jtLibro.setModel(modelo);
        }
    }//GEN-LAST:event_btnModMouseClicked

    private void btnDelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelMouseClicked
        if (this.jtLibro.getSelectedRow() >= 0) {
            modelo = (DefaultTableModel) this.jtLibro.getModel(); 
            modelo.removeRow(this.jtLibro.getSelectedRow());
            for (int i = 0; i < libros.size(); i++) {
                if (modelo.getValueAt(this.jtLibro.getSelectedRow(), 0).equals(libros.get(i).getTitulo())) {
                    libros.remove(libros.get(i));
                }
            }
            this.jtLibro.setModel(modelo);
        }
    }//GEN-LAST:event_btnDelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Biblioteca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMod;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cmbGenero;
    private javax.swing.JComboBox<String> cmbPuntaje;
    private com.toedter.calendar.JDateChooser dcFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jtHistorial;
    private javax.swing.JTable jtLibro;
    private javax.swing.JSpinner spnCopias;
    private javax.swing.JSpinner spnEdicion;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
    
    public void setCargar(){
        for (int i = 0; i < libros.size(); i++) {
            Libro lib = libros.get(i);
            Object row[] ={
                lib.getTitulo(),
                    lib.getAutor(),
                    lib.getDescrip(),
                    lib.getFechaLanzamiento(),
                    lib.getPuntos(),
                    lib.getEdicion(),
                    lib.getCopias(),
                    lib.getGenero(),
                    lib.getPrecio()
            };
            modelo.addRow(row);
            this.jtLibro.setModel(modelo);
        }
    }
}
